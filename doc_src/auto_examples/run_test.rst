
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples\run_test.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_run_test.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_run_test.py:


Test Run
========
A simple 90 pulse to test the spincore when we initially began

.. GENERATED FROM PYTHON SOURCE LINES 6-79


.. rst-class:: sphx-glr-script-out

.. code-block:: pytb

    Traceback (most recent call last):
      File "C:\Users\Alex Guinness\gitstuff\spincore_apps\examples\run_test.py", line 8, in <module>
        import SpinCore_pp
      File "C:\Users\Alex Guinness\gitstuff\spincore_apps\Spincore_pp\SpinCore_pp.py", line 17, in <module>
        _SpinCore_pp = swig_import_helper()
      File "C:\Users\Alex Guinness\gitstuff\spincore_apps\Spincore_pp\SpinCore_pp.py", line 16, in swig_import_helper
        return importlib.import_module('_SpinCore_pp')
      File "C:\ProgramData\Anaconda3\lib\importlib\__init__.py", line 127, in import_module
        return _bootstrap._gcd_import(name[level:], package, level)
    ModuleNotFoundError: No module named '_SpinCore_pp'






|

.. code-block:: default

    from pyspecdata import *
    import os
    import SpinCore_pp
    from datetime import datetime
    import h5py
    fl = figlist_var()
    # {{{importing acquisition parameters
    config_dict = SpinCore_pp.configuration("active.ini")
    nPoints = int(config_dict["acq_time_ms"] * config_dict["SW_kHz"] + 0.5)
    # }}}
    # {{{create filename and save to config file
    date = datetime.now().strftime("%y%m%d")
    config_dict["type"] = "test"
    config_dict["date"] = date
    filename = f"{config_dict['date']}_{config_dict['chemical']}_{config_dict['type']}"
    # }}}
    # {{{set phase cycling
    phase_cycling = True
    if phase_cycling:
        ph1_cyc = r_[0, 1, 2, 3]
        nPhaseSteps = 4
    if not phase_cycling:
        ph1_cyc = 0.0
        nPhaseSteps = 1
    # }}}
    # {{{check total points
    total_pts = nPoints * nPhaseSteps
    assert total_pts < 2 ** 14, (
        "You are trying to acquire %d points (too many points) -- either change SW or acq time so nPoints x nPhaseSteps is less than 16384\nyou could try reducing the acq_time_ms to %f"
        % (total_pts, config_dict["acq_time_ms"] * 16384 / total_pts)
    )
    # }}}
    # {{{extra parameters
    tx_phases = r_[0.0, 90.0, 180.0, 270.0]
    amplitude = 1.0
    RX_delay = 100.0
    acq_time = nPoints / config_dict['SW_kHz']
    config_dict['acq_time'] = acq_time
    data_length = 2 * nPoints * config_dict['nEchoes'] * nPhaseSteps
    SpinCore_pp.configureTX(config_dict['adcOffset'], config_dict['carrierFreq_MHz'], 
            tx_phases, amplitude, nPoints)
    SpinCore_pp.init_ppg()
    if phase_cycling:
        SpinCore_pp.load(
            [
                ("marker", "start", 1),
                ("phase_reset", 1),
                ("delay_TTL", 1.0),
                ("pulse_TTL", config_dict['p90'], "ph1", ph1_cyc),
                ("delay", 3e6),
                ("jumpto", "start"),
            ]
        )
    if not phase_cycling:
        SpinCore_pp.load(
            [
                ("marker", "start", 1),
                ("phase_reset", 1),
                ("delay_TTL", 1.0),
                ("pulse_TTL", config_dict['p90'], 0.0),
                ("delay", 3e6),
                ("jumpto", "start"),
            ]
        )
    SpinCore_pp.stop_ppg()
    if phase_cycling:
        for x in range(config_dict['nScans']):
            print("SCAN NO. %d" % (x + 1))
            SpinCore_pp.runBoard()
    if not phase_cycling:
        SpinCore_pp.runBoard()
    SpinCore_pp.stopBoard()
    print("EXITING...")


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.007 seconds)


.. _sphx_glr_download_auto_examples_run_test.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: run_test.py <run_test.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: run_test.ipynb <run_test.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
