
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples\Ep_spacing.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_Ep_spacing.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_Ep_spacing.py:

Generate an appropriately spaced power axis for a progressive saturation
============================================================================
Using an estimated p_1/2 (can be set in the configuration file), an appropriately spaced power axis is generated so that the linear regime of a progressive saturation is not skipped over.

.. GENERATED FROM PYTHON SOURCE LINES 5-23


.. rst-class:: sphx-glr-script-out

.. code-block:: pytb

    Traceback (most recent call last):
      File "C:\Users\Alex Guinness\gitstuff\spincore_apps\examples\Ep_spacing.py", line 6, in <module>
        from SpinCore_pp.power_helper import Ep_spacing_from_phalf
      File "C:\Users\Alex Guinness\gitstuff\spincore_apps\Spincore_pp\SpinCore_pp.py", line 17, in <module>
        _SpinCore_pp = swig_import_helper()
      File "C:\Users\Alex Guinness\gitstuff\spincore_apps\Spincore_pp\SpinCore_pp.py", line 16, in swig_import_helper
        return importlib.import_module('_SpinCore_pp')
      File "C:\ProgramData\Anaconda3\lib\importlib\__init__.py", line 127, in import_module
        return _bootstrap._gcd_import(name[level:], package, level)
    ModuleNotFoundError: No module named '_SpinCore_pp'






|

.. code-block:: default

    from pyspecdata import *
    from SpinCore_pp.power_helper import Ep_spacing_from_phalf
    from SpinCore_pp.config_parser_fn import configuration
    import matplotlib.pyplot as plt

    config_dict = configuration("active.ini")
    with figlist_var() as fl:
        Ep_powers = Ep_spacing_from_phalf(
            est_phalf=config_dict["guessed_phalf"] / 4,
            max_power=config_dict["max_power"],
            p_steps=config_dict["power_steps"],
            min_dBm_step=config_dict["min_dBm_step"],
            fl=fl,
        )
        plt.title("Evenly spaced Ep curve")
        plt.ylabel("Signal")
        plt.xlabel("Power / W")
        print("The list with the optimal powers for this E(p) experiment is", Ep_powers)


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.005 seconds)


.. _sphx_glr_download_auto_examples_Ep_spacing.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: Ep_spacing.py <Ep_spacing.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: Ep_spacing.ipynb <Ep_spacing.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
