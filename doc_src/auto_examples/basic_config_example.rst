
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples\basic_config_example.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_basic_config_example.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_basic_config_example.py:

Example of how the configuration file is called and used
============================================================

Demonstration of the basic functions and usage of the configuration file including how to initialize, and call parameters that are defaulted in the parser function or set in the configuration file. If a parameter is neither in the parser function nor the configuration file an error will be thrown letting the user know. The configuration file can easily be updated and written to within any script and then called again.

.. GENERATED FROM PYTHON SOURCE LINES 6-74


.. rst-class:: sphx-glr-script-out

.. code-block:: pytb

    Traceback (most recent call last):
      File "C:\Users\Alex Guinness\gitstuff\spincore_apps\examples\basic_config_example.py", line 8, in <module>
        import SpinCore_pp
      File "C:\Users\Alex Guinness\gitstuff\spincore_apps\Spincore_pp\SpinCore_pp.py", line 17, in <module>
        _SpinCore_pp = swig_import_helper()
      File "C:\Users\Alex Guinness\gitstuff\spincore_apps\Spincore_pp\SpinCore_pp.py", line 16, in swig_import_helper
        return importlib.import_module('_SpinCore_pp')
      File "C:\ProgramData\Anaconda3\lib\importlib\__init__.py", line 127, in import_module
        return _bootstrap._gcd_import(name[level:], package, level)
    ModuleNotFoundError: No module named '_SpinCore_pp'






|

.. code-block:: default

    import configparser
    import os
    import SpinCore_pp

    # initialize
    myconfig = SpinCore_pp.configuration("active.ini")
    # {{{ check that we get the errors we're supposed to
    # set a parameter that's not registered:
    try:
        myconfig["new_thing"] = 300
        failure = False
    except:
        failure = True
    if failure:
        print("I tried to set an unregistered parameter, and it failed ... good!")
    else:
        raise ValueError("Didn't fail on unregistered parameter!")
    # look for a parameter that's not registered:
    try:
        retval = myconfig["another_thing"]
        failure = False
    except:
        failure = True
    if failure:
        print("I tried to get an unregistered parameter, and it failed ... good!")
    else:
        raise ValueError("Didn't fail on unregistered parameter!")
    # }}}
    # {{{ dealing with defaults
    # look for a parameter that isn't in the ini file, but is registered with a default
    print("odnp_counter", myconfig["odnp_counter"])
    # look for a parameter that isn't in the ini file and does not have a default
    try:
        print("p90_us", myconfig["p90_us"])  # look for something that doesn't exist
    except Exception as e:
        print("looking for p90_us failed with:\n\n", e)
    # }}}
    # {{{ pretty formatting
    myconfig["adc_offset"] = 30
    print(
        "print out the config settings as a dictionary!", myconfig.asdict()
    )  # so we can, e.g. put in an HDF5 file -- this should have the nice case that was registered
    print("print them out more legibly!!\n", myconfig)
    # }}}
    # {{{ set a parameter that is registered, and see that it will change, which can be seen by running the script twice
    print(
        "echo counter was",
        myconfig["echo_counter"],
        "and I'm going to increment it.  If you re-run this script, this value should increase",
    )
    myconfig["echo_counter"] += 1
    myconfig.write()  # this should write the adc offset and whatever else we've changed
    # }}}
    # {{{ an example of pulling a full list of keyword arguments for a function
    relevant_kwargs = {
        j: myconfig[j]
        for j in ["krho_cold", "krho_hot", "T1water_cold", "T1water_hot"]
        if j in myconfig.keys()
    }
    print(
        "for calculating a IR or FIR vdlist, the relevant parameters that I find in your ini file are",
        relevant_kwargs,
    )
    print(
        "this gives me the vdlist:",
        SpinCore_pp.vdlist_from_relaxivities(myconfig["concentration"], **relevant_kwargs),
    )
    # }}}


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.006 seconds)


.. _sphx_glr_download_auto_examples_basic_config_example.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: basic_config_example.py <basic_config_example.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: basic_config_example.ipynb <basic_config_example.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
